[{"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\index.js":"1","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\App.js":"2","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Header.js":"3","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\utils.js":"4","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\LoadingContainer.js":"5","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\NewOrder.js":"6","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\MyOrders.js":"7","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\AllOrders.js":"8","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\AllTrades.js":"9","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Wallet.js":"10","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Dropdown.js":"11","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Footer.js":"12","C:\\Users\\Arslan\\orderx\\frontend\\src\\utils.js":"13","C:\\Users\\Arslan\\orderx\\frontend\\src\\Footer.js":"14","C:\\Users\\Arslan\\orderx\\frontend\\src\\NewOrder.js":"15","C:\\Users\\Arslan\\orderx\\frontend\\src\\AllTrades.js":"16","C:\\Users\\Arslan\\orderx\\frontend\\src\\Dropdown.js":"17","C:\\Users\\Arslan\\orderx\\frontend\\src\\Header.js":"18","C:\\Users\\Arslan\\orderx\\frontend\\src\\index.js":"19","C:\\Users\\Arslan\\orderx\\frontend\\src\\Wallet.js":"20","C:\\Users\\Arslan\\orderx\\frontend\\src\\MyOrders.js":"21","C:\\Users\\Arslan\\orderx\\frontend\\src\\LoadingContainer.js":"22","C:\\Users\\Arslan\\orderx\\frontend\\src\\AllOrders.js":"23","C:\\Users\\Arslan\\orderx\\frontend\\src\\App.js":"24","C:\\Users\\Arslan\\orderx\\frontend\\src\\addToken.js":"25","C:\\Users\\Arslan\\orderx\\frontend\\src\\AddToken.js":"26"},{"size":267,"mtime":1610530610458,"results":"27","hashOfConfig":"28"},{"size":6303,"mtime":1610530610415,"results":"29","hashOfConfig":"28"},{"size":955,"mtime":1613383198625,"results":"30","hashOfConfig":"28"},{"size":1832,"mtime":1610530610465,"results":"31","hashOfConfig":"28"},{"size":1046,"mtime":1610530610418,"results":"32","hashOfConfig":"28"},{"size":3496,"mtime":1610530610419,"results":"33","hashOfConfig":"28"},{"size":1383,"mtime":1610530610418,"results":"34","hashOfConfig":"28"},{"size":1363,"mtime":1610530610414,"results":"35","hashOfConfig":"28"},{"size":1846,"mtime":1613724455239,"results":"36","hashOfConfig":"28"},{"size":3150,"mtime":1613578377394,"results":"37","hashOfConfig":"28"},{"size":1042,"mtime":1613383568576,"results":"38","hashOfConfig":"28"},{"size":789,"mtime":1613577773117,"results":"39","hashOfConfig":"28"},{"size":1906,"mtime":1613903276796,"results":"40","hashOfConfig":"41"},{"size":789,"mtime":1613577773117,"results":"42","hashOfConfig":"41"},{"size":3574,"mtime":1613825102815,"results":"43","hashOfConfig":"41"},{"size":1846,"mtime":1613724455239,"results":"44","hashOfConfig":"41"},{"size":1032,"mtime":1613901049151,"results":"45","hashOfConfig":"41"},{"size":957,"mtime":1613901062676,"results":"46","hashOfConfig":"41"},{"size":267,"mtime":1610530610458,"results":"47","hashOfConfig":"41"},{"size":3183,"mtime":1613824915625,"results":"48","hashOfConfig":"41"},{"size":1496,"mtime":1613825298191,"results":"49","hashOfConfig":"41"},{"size":1046,"mtime":1610530610418,"results":"50","hashOfConfig":"41"},{"size":1476,"mtime":1613825510441,"results":"51","hashOfConfig":"41"},{"size":6691,"mtime":1613981063740,"results":"52","hashOfConfig":"41"},{"size":1678,"mtime":1613842854521,"results":"53","hashOfConfig":"41"},{"size":1789,"mtime":1613843945200,"results":"54","hashOfConfig":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"avnuzv",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q3ihjg",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\index.js",[],["116","117"],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\App.js",["118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from './Header.js';\r\nimport Footer from './Footer.js';\r\nimport Wallet from './Wallet.js';\r\nimport NewOrder from './NewOrder.js';\r\nimport AllOrders from './AllOrders.js';\r\nimport MyOrders from './MyOrders.js';\r\nimport AllTrades from './AllTrades.js';\r\n\r\nconst SIDE = {\r\n  BUY: 0,\r\n  SELL: 1\r\n};\r\n\r\nfunction App({web3, accounts, contracts}) {\r\n  const [tokens, setTokens] = useState([]);\r\n  const [user, setUser] = useState({\r\n    accounts: [],\r\n    balances: {\r\n      tokenDex: 0,\r\n      tokenWallet: 0\r\n    },\r\n    selectedToken: undefined\r\n  });\r\n  const [orders, setOrders] = useState({\r\n    buy: [],\r\n    sell: []\r\n  });\r\n  const [trades, setTrades] = useState([]);\r\n  const [listener, setListener] = useState(undefined);\r\n\r\n  const getBalances = async (account, token) => {\r\n    const tokenDex = await contracts.dex.methods\r\n      .traderBalances(account, web3.utils.fromAscii(token.ticker))\r\n      .call();\r\n    const tokenWallet = await contracts[token.ticker].methods\r\n      .balanceOf(account)\r\n      .call();\r\n    return {tokenDex, tokenWallet};\r\n  }\r\n\r\n  const getOrders = async token => {\r\n    const orders = await Promise.all([\r\n      contracts.dex.methods\r\n        .getOrders(web3.utils.fromAscii(token.ticker), SIDE.BUY)\r\n        .call(),\r\n      contracts.dex.methods\r\n        .getOrders(web3.utils.fromAscii(token.ticker), SIDE.SELL)\r\n        .call(),\r\n    ]);\r\n    return {buy: orders[0], sell: orders[1]};\r\n  }\r\n\r\n  const listenToTrades = token => {\r\n    const tradeIds = new Set();\r\n    setTrades([]);\r\n    const listener = contracts.dex.events.NewTrade(\r\n      {\r\n        filter: {ticker: web3.utils.fromAscii(token.ticker)},\r\n        fromBlock: 0\r\n      })\r\n      .on('data', newTrade => {\r\n        if(tradeIds.has(newTrade.returnValues.tradeId)) return;\r\n        tradeIds.add(newTrade.returnValues.tradeId);\r\n        setTrades(trades => ([...trades, newTrade.returnValues]));\r\n      });\r\n    setListener(listener);\r\n  }\r\n\r\n  const selectToken = token => {\r\n    setUser({...user, selectedToken: token});\r\n  }\r\n\r\n  const deposit = async amount => {\r\n    await contracts[user.selectedToken.ticker].methods\r\n      .approve(contracts.dex.options.address, amount)\r\n      .send({from: user.accounts[0]});\r\n    await contracts.dex.methods\r\n      .deposit(amount, web3.utils.fromAscii(user.selectedToken.ticker))\r\n      .send({from: user.accounts[0]});\r\n    const balances = await getBalances(\r\n      user.accounts[0],\r\n      user.selectedToken\r\n    );\r\n    setUser(user => ({ ...user, balances}));\r\n  }\r\n\r\n  const withdraw = async amount => {\r\n    await contracts.dex.methods\r\n      .withdraw(\r\n        amount, \r\n        web3.utils.fromAscii(user.selectedToken.ticker)\r\n      )\r\n      .send({from: user.accounts[0]});\r\n    const balances = await getBalances(\r\n      user.accounts[0],\r\n      user.selectedToken\r\n    );\r\n    setUser(user => ({ ...user, balances}));\r\n  }\r\n\r\n  const createMarketOrder = async (amount, side) => {\r\n    await contracts.dex.methods\r\n      .createMarketOrder(\r\n        web3.utils.fromAscii(user.selectedToken.ticker),\r\n        amount,\r\n        side\r\n      )\r\n      .send({from: user.accounts[0]});\r\n    const orders = await getOrders(user.selectedToken);\r\n    setOrders(orders);\r\n  }\r\n\r\n  const createLimitOrder = async (amount, price, side) => {\r\n    await contracts.dex.methods\r\n      .createLimitOrder(\r\n        web3.utils.fromAscii(user.selectedToken.ticker),\r\n        amount,\r\n        price,\r\n        side\r\n      )\r\n      .send({from: user.accounts[0]});\r\n    const orders = await getOrders(user.selectedToken);\r\n    setOrders(orders);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const rawTokens = await contracts.dex.methods.getTokens().call(); \r\n      const tokens = rawTokens.map(token => ({\r\n        ...token,\r\n        ticker: web3.utils.hexToUtf8(token.ticker)\r\n      }));\r\n      const [balances, orders] = await Promise.all([\r\n        getBalances(accounts[0], tokens[0]),\r\n        getOrders(tokens[0]),\r\n      ]);\r\n      listenToTrades(tokens[0])\r\n      setTokens(tokens);\r\n      setUser({accounts, balances, selectedToken: tokens[0]});\r\n      setOrders(orders);\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const [balances, orders] = await Promise.all([\r\n        getBalances(\r\n          user.accounts[0], \r\n          user.selectedToken\r\n        ),\r\n        getOrders(user.selectedToken),\r\n      ]);\r\n      listenToTrades(user.selectedToken);\r\n      setUser(user => ({ ...user, balances}));\r\n      setOrders(orders);\r\n    }\r\n    if(typeof user.selectedToken !== 'undefined') {\r\n      init();\r\n    }\r\n  }, [user.selectedToken], () => {\r\n    listener.unsubscribe();\r\n  });\r\n\r\n  if(typeof user.selectedToken === 'undefined') {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Header\r\n        contracts={contracts}\r\n        tokens={tokens}\r\n        user={user}\r\n        selectToken={selectToken}\r\n      />\r\n      <main className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4 first-col\">\r\n            <Wallet \r\n              user={user}\r\n              deposit={deposit}\r\n              withdraw={withdraw}\r\n            />\r\n            {user.selectedToken.ticker !== 'DAI' ? (\r\n              <NewOrder \r\n                createMarketOrder={createMarketOrder}\r\n                createLimitOrder={createLimitOrder}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          {user.selectedToken.ticker !== 'DAI' ? (\r\n            <div className=\"col-sm-8\">\r\n              <AllTrades \r\n                trades={trades}\r\n              />\r\n              <AllOrders \r\n                orders={orders}\r\n              />\r\n              <MyOrders \r\n                orders={{\r\n                  buy: orders.buy.filter(\r\n                    order => order.trader.toLowerCase() === accounts[0].toLowerCase()\r\n                  ),\r\n                  sell: orders.sell.filter(\r\n                    order => order.trader.toLowerCase() === accounts[0].toLowerCase()\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Header.js",[],["120","121"],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\utils.js",[],["122","123"],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\LoadingContainer.js",[],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\NewOrder.js",[],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\MyOrders.js",[],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\AllOrders.js",[],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\AllTrades.js",[],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Wallet.js",[],"C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Dropdown.js",["124"],"import React, { useState } from 'react';\r\n\r\nfunction Dropdown({onSelect, activeItem, items}) {\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n  const selectItem = (e, item) => {\r\n    e.preventDefault();\r\n    setDropdownVisible(!dropdownVisible);\r\n    onSelect(item);\r\n  }\r\n\r\n  return (\r\n    <div className='dropdown ml-3'>\r\n      <button \r\n        className=\"btn btn-secondary dropdown-toggle\" \r\n        type=\"button\" \r\n        onClick={() => setDropdownVisible(!dropdownVisible)}\r\n      >\r\n        {activeItem.label}/BUSD\r\n      </button>\r\n      <div className={`dropdown-menu ${dropdownVisible ? 'visible' : ''}`}>\r\n        {items && items.map((item, i) => ( \r\n          <a \r\n            className={`dropdown-item ${item.value === activeItem.value ? 'active' : null}`} \r\n            href='#'\r\n            key={i}\r\n            onClick={e => selectItem(e, item.value)}\r\n          >\r\n            {item.label}\r\n            /BUSD\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","C:\\Users\\Arslan\\hormoney\\dex\\client\\src\\Footer.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\utils.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\Footer.js",[],["125","126"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\NewOrder.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\AllTrades.js",[],["127","128"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\Dropdown.js",["129"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\Header.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\index.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\Wallet.js",[],["130","131"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\MyOrders.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\LoadingContainer.js",[],["132","133"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\AllOrders.js",[],"C:\\Users\\Arslan\\orderx\\frontend\\src\\App.js",["134","135"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\addToken.js",["136"],"C:\\Users\\Arslan\\orderx\\frontend\\src\\AddToken.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":144,"column":6,"nodeType":"143","endLine":144,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":162,"column":6,"nodeType":"143","endLine":162,"endColumn":26,"suggestions":"146"},{"ruleId":"137","replacedBy":"147"},{"ruleId":"139","replacedBy":"148"},{"ruleId":"137","replacedBy":"149"},{"ruleId":"139","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":23,"column":11,"nodeType":"153","endLine":28,"endColumn":12},{"ruleId":"137","replacedBy":"154"},{"ruleId":"139","replacedBy":"155"},{"ruleId":"137","replacedBy":"156"},{"ruleId":"139","replacedBy":"157"},{"ruleId":"151","severity":1,"message":"152","line":23,"column":11,"nodeType":"153","endLine":28,"endColumn":12},{"ruleId":"137","replacedBy":"158"},{"ruleId":"139","replacedBy":"159"},{"ruleId":"137","replacedBy":"160"},{"ruleId":"139","replacedBy":"161"},{"ruleId":"141","severity":1,"message":"162","line":152,"column":6,"nodeType":"143","endLine":152,"endColumn":8,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"145","line":170,"column":6,"nodeType":"143","endLine":170,"endColumn":26,"suggestions":"164"},{"ruleId":"165","severity":2,"message":"166","line":5,"column":37,"nodeType":"167","endLine":5,"endColumn":45},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accounts', 'contracts.dex.methods', 'getBalances', 'getOrders', 'listenToTrades', and 'web3.utils'. Either include them or remove the dependency array. If 'setUser' needs the current value of 'accounts', you can also switch to useReducer instead of useState and read 'accounts' in the reducer.","ArrayExpression",["170"],"React Hook useEffect has missing dependencies: 'getBalances', 'getOrders', 'listenToTrades', and 'user.accounts'. Either include them or remove the dependency array.",["171"],["168"],["169"],["168"],["169"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["168"],["169"],["168"],["169"],["168"],["169"],["168"],["169"],"React Hook useEffect has missing dependencies: 'accounts', 'contracts.orderx.methods', 'getBalances', 'getOrders', 'listenToTrades', and 'web3.utils'. Either include them or remove the dependency array. If 'setUser' needs the current value of 'accounts', you can also switch to useReducer instead of useState and read 'accounts' in the reducer.",["172"],["173"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"addToken\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"176","fix":"180"},"Update the dependencies array to be: [accounts, contracts.dex.methods, getBalances, getOrders, listenToTrades, web3.utils]",{"range":"181","text":"182"},"Update the dependencies array to be: [getBalances, getOrders, listenToTrades, user.accounts, user.selectedToken]",{"range":"183","text":"184"},"Update the dependencies array to be: [accounts, contracts.orderx.methods, getBalances, getOrders, listenToTrades, web3.utils]",{"range":"185","text":"186"},{"range":"187","text":"184"},[4229,4231],"[accounts, contracts.dex.methods, getBalances, getOrders, listenToTrades, web3.utils]",[4693,4713],"[getBalances, getOrders, listenToTrades, user.accounts, user.selectedToken]",[4530,4532],"[accounts, contracts.orderx.methods, getBalances, getOrders, listenToTrades, web3.utils]",[4994,5014]]